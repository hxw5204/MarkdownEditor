{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "useImperativeHandle",
    "ReactMarkdown",
    "gfm",
    "slug",
    "headings",
    "rehypeRaw",
    "rehypeAttrs",
    "rehypePrism",
    "rehypeRewrite",
    "getCodeString",
    "octiconLink",
    "copyElement",
    "rehypeRewriteHandle",
    "node",
    "index",
    "parent",
    "type",
    "test",
    "tagName",
    "child",
    "children",
    "properties",
    "ariaHidden",
    "class",
    "code",
    "push",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "source",
    "style",
    "onScroll",
    "onMouseOver",
    "pluginsFilter",
    "warpperElement",
    "other",
    "mdp",
    "createRef",
    "cls",
    "rehypePlugins",
    "ignoreMissing",
    "rewrite",
    "remarkPlugins"
  ],
  "mappings": "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",
  "sourcesContent": [
    "import React, { useImperativeHandle } from 'react';\nimport ReactMarkdown, { Options } from 'react-markdown';\nimport { Root, Element, ElementContent } from 'hast';\nimport { PluggableList } from 'unified';\nimport gfm from 'remark-gfm';\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeRaw from 'rehype-raw';\nimport rehypeAttrs from 'rehype-attr';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeRewrite, { getCodeString } from 'rehype-rewrite';\nimport { octiconLink } from './nodes/octiconLink';\nimport { copyElement } from './nodes/copy';\nimport './styles/markdown.less';\n\nconst rehypeRewriteHandle = (node: ElementContent, index: number | null, parent: Root | Element | null) => {\n  if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n    const child = node.children && (node.children[0] as Element);\n    if (child && child.properties && child.properties.ariaHidden === 'true') {\n      child.properties = { class: 'anchor', ...child.properties };\n      child.children = [octiconLink];\n    }\n  }\n  if (node.type === 'element' && node.tagName === 'pre') {\n    const code = getCodeString(node.children);\n    node.children.push(copyElement(code));\n  }\n};\n\nexport interface MarkdownPreviewProps extends Omit<Options, 'children'> {\n  prefixCls?: string;\n  className?: string;\n  source?: string;\n  style?: React.CSSProperties;\n  pluginsFilter?: (type: 'rehype' | 'remark', plugin: PluggableList) => PluggableList;\n  warpperElement?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  onMouseOver?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport interface MarkdownPreviewRef extends MarkdownPreviewProps {\n  mdp: React.RefObject<HTMLDivElement>;\n}\n\nexport default React.forwardRef<MarkdownPreviewRef, MarkdownPreviewProps>((props, ref) => {\n  const {\n    prefixCls = 'wmde-markdown wmde-markdown-color',\n    className,\n    source,\n    style,\n    onScroll,\n    onMouseOver,\n    pluginsFilter,\n    warpperElement = {},\n    ...other\n  } = props;\n  const mdp = React.createRef<HTMLDivElement>();\n  useImperativeHandle(ref, () => ({ ...props, mdp }), [mdp, props]);\n  const cls = `${prefixCls || ''} ${className || ''}`;\n  const rehypePlugins: PluggableList = [\n    [rehypePrism, { ignoreMissing: true }],\n    rehypeRaw,\n    slug,\n    headings,\n    [rehypeRewrite, { rewrite: rehypeRewriteHandle }],\n    [rehypeAttrs, { properties: 'attr' }],\n    ...(other.rehypePlugins || []),\n  ];\n  const remarkPlugins = [...(other.remarkPlugins || []), gfm];\n  return (\n    <div ref={mdp} onScroll={onScroll} onMouseOver={onMouseOver} {...warpperElement} className={cls} style={style}>\n      <ReactMarkdown\n        {...other}\n        rehypePlugins={pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins}\n        remarkPlugins={pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins}\n        children={source || ''}\n      />\n    </div>\n  );\n});\n"
  ]
}